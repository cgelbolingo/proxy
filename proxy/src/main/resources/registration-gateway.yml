openapi: 3.0.1
info:
  title: User service gateway
  description: Gateway for requests routed towards the legacy user backend service
  version: 1.0.0
servers:
  - url: https://localhost:8080
    description: Test Server
paths:
  /users/create:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
  /users/{id}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /users/{id}/update:
    put:
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        description: User object with updated information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid request
  /users/{id}/delete:
    delete:
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: No Content
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: dd6188ac-51c9-44f8-9392-ee384d5d7e5a
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john@example.com
          format: email
      required:
        - firstName
        - lastName
        - email
    UserModel:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john@example.com
          format: email
      required:
        - firstName
        - lastName
        - email
